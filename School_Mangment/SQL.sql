-- THIS SCRIPT WAS GENERATED BY THE ERD TOOL IN PGADMIN 4.
-- PLEASE LOG AN ISSUE AT HTTPS://GITHUB.COM/PGADMIN-ORG/PGADMIN4/ISSUES/NEW/CHOOSE IF YOU FIND ANY BUGS, INCLUDING REPRODUCTION STEPS.
BEGIN;

CREATE TABLE IF NOT EXISTS "SCHOOL_MANGMENT"."STUDENT" (
	ID UUID NOT NULL,
	"NAME" TEXT NOT NULL,
	BIRTH_DAY DATE NOT NULL,
	"PHONE_NUMBER" TEXT NOT NULL,
	EMAIL TEXT,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Class" (
	ID UUID NOT NULL,
	"Class_name" TEXT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Term" (
	ID UUID,
	"Term_Name" TEXT NOT NULL,
	"Year_id" UUID NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Parent" (
	ID UUID,
	"Name" TEXT NOT NULL,
	"Job" TEXT NOT NULL,
	"Phone" TEXT NOT NULL,
	"Email" TEXT,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Student_Parent" (
	ID UUID,
	"Student_id" UUID NOT NULL,
	"Parent_id" UUID NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Teacher" (
	ID UUID,
	"Name" TEXT NOT NULL,
	"Specialty" TEXT NOT NULL,
	"Certificate_id" UUID NOT NULL,
	"Phone" TEXT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Certificate" (
	ID UUID,
	"Specialty" TEXT NOT NULL,
	"Certificate_url" TEXT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Materials" (
	ID UUID,
	"Name" TEXT NOT NULL,
	"Teacher_id" UUID NOT NULL,
	"Term_id" UUID,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Years" (
	ID UUID,
	"Year_Name" TEXT NOT NULL,
	"Salary" NUMERIC NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Student_Class" (
	ID UUID,
	"Student_Id" UUID NOT NULL,
	"Class_id" UUID NOT NULL,
	"Term_id" UUID NOT NULL,
	"Year" DATE NOT NULL DEFAULT NOW(),
	"Amount_paid" NUMERIC NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Presence" (
	ID UUID,
	DATE DATE NOT NULL DEFAULT NOW(),
	"Student_id" UUID NOT NULL,
	"Material_id" UUID NOT NULL,
	"isPresence" BOOLEAN NOT NULL DEFAULT FALSE,
	"isDelayed" BOOLEAN NOT NULL DEFAULT FALSE,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Test" (
	ID UUID,
	"Material_id" UUID NOT NULL,
	"Student_id" UUID NOT NULL,
	"Degree" NUMERIC NOT NULL,
	"Test_Type_id" UUID,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Test_Type" (
	ID UUID,
	"Test_type" TEXT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Activities" (
	ID UUID,
	"Name" TEXT NOT NULL,
	"Salary" NUMERIC NOT NULL,
	"Date" DATE NOT NULL,
	"Place" TEXT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS "School_Mangment"."Student_Activate" (
	ID UUID,
	"Student_id" UUID NOT NULL,
	"Activate_id" UUID NOT NULL,
	PRIMARY KEY (ID)
);

ALTER TABLE IF EXISTS "School_Mangment"."Term"
ADD FOREIGN KEY ("Year_id") REFERENCES "School_Mangment"."Years" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Student_Parent"
ADD FOREIGN KEY ("Student_id") REFERENCES "School_Mangment"."Student" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Student_Parent"
ADD FOREIGN KEY ("Parent_id") REFERENCES "School_Mangment"."Parent" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Teacher"
ADD FOREIGN KEY ("Certificate_id") REFERENCES "School_Mangment"."Certificate" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Materials"
ADD FOREIGN KEY ("Teacher_id") REFERENCES "School_Mangment"."Teacher" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Materials"
ADD FOREIGN KEY ("Term_id") REFERENCES "School_Mangment"."Term" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Student_Class"
ADD FOREIGN KEY ("Student_Id") REFERENCES "School_Mangment"."Student" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Student_Class"
ADD FOREIGN KEY ("Class_id") REFERENCES "School_Mangment"."Class" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Student_Class"
ADD FOREIGN KEY ("Term_id") REFERENCES "School_Mangment"."Term" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Presence"
ADD FOREIGN KEY ("Student_id") REFERENCES "School_Mangment"."Student" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Presence"
ADD FOREIGN KEY ("Material_id") REFERENCES "School_Mangment"."Materials" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Test"
ADD FOREIGN KEY ("Material_id") REFERENCES "School_Mangment"."Materials" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Test"
ADD FOREIGN KEY ("Student_id") REFERENCES "School_Mangment"."Student" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Test"
ADD FOREIGN KEY ("Test_Type_id") REFERENCES "School_Mangment"."Test_Type" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Student_Activate"
ADD FOREIGN KEY ("Student_id") REFERENCES "School_Mangment"."Student" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS "School_Mangment"."Student_Activate"
ADD FOREIGN KEY ("Activate_id") REFERENCES "School_Mangment"."Activities" (ID) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

END;