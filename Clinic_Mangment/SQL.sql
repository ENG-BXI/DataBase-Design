-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Patients"
(
    id uuid,
    "Name" text NOT NULL,
    sex text NOT NULL,
    "Birth_Day" date NOT NULL,
    email text NOT NULL,
    address text NOT NULL,
    "Medical_History_id" uuid NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Patients_Phone_Number"
(
    id uuid,
    "Patients_id" uuid NOT NULL,
    "Phone_Number" text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Medical_Insurance"
(
    id uuid,
    "Company_id" uuid NOT NULL,
    "Patients_Id" uuid NOT NULL,
    "percentage_Medical_Insurance" numeric NOT NULL,
    "expire_Date" date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Company"
(
    id uuid,
    "Name" text NOT NULL,
    phone numeric NOT NULL,
    email numeric NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Medical_History"
(
    id uuid,
    "Name" text NOT NULL,
    descrption text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Patients_Medical_History"
(
    id uuid,
    "Patients_id" uuid NOT NULL,
    "Medical_History_id" uuid NOT NULL,
    date date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Doctors"
(
    id uuid,
    "Fname" text NOT NULL,
    "Lname" text NOT NULL,
    "Specialization_id" uuid NOT NULL,
    "Phone_Number" text NOT NULL,
    "Email" text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Specialties"
(
    id uuid,
    "Name" text NOT NULL,
    "Descrption" text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Certificates"
(
    id uuid NOT NULL,
    "Name" text NOT NULL,
    "Descrption" text NOT NULL,
    "Certificate_Url" text NOT NULL,
    "Doctor_id" uuid NOT NULL
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Doctor_schedule"
(
    id uuid,
    "Day" text NOT NULL,
    "Start_time" time with time zone NOT NULL,
    "End_time" time with time zone NOT NULL,
    "Doctor_id" uuid NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Appointments"
(
    id uuid,
    "Patient_id" uuid NOT NULL,
    "Doctor_id" uuid NOT NULL,
    "Descrption" text,
    date date NOT NULL,
    "time" time with time zone NOT NULL DEFAULT Now(),
    "Duration" text NOT NULL,
    "Status" text NOT NULL,
    "order" numeric NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Visit"
(
    id uuid,
    "Patient_Id" uuid NOT NULL,
    "Appointment_id" uuid NOT NULL,
    "Date" date NOT NULL,
    "Diagnosis" text NOT NULL,
    "Note" text,
    "Prescription_id" uuid,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Pharmaceutical"
(
    id uuid,
    "Name" text NOT NULL,
    "Description" text,
    "isPrescriptionRequire" boolean NOT NULL DEFAULT false,
    "Price" numeric NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Prescription"
(
    id uuid,
    "Date" date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Prescription_Item"
(
    id uuid,
    "Prescription_id" uuid NOT NULL,
    pharmaceutical_id uuid NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Analysis"
(
    id uuid,
    "Name" text NOT NULL,
    "Descrption" text NOT NULL,
    "Price" numeric NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Visit_Analysis"
(
    id uuid,
    "Visit_id" uuid NOT NULL,
    "Analysis_id" uuid NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Clinic_Mangment"."Attendance"
(
    id uuid,
    "Doctor_id" uuid NOT NULL,
    "Doctor_Schedule_id" uuid NOT NULL,
    "IsPresence " boolean NOT NULL DEFAULT false,
    "Start_time" time with time zone NOT NULL,
    "End_time" time with time zone NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS "Clinic_Mangment"."Patients_Phone_Number"
    ADD FOREIGN KEY ("Patients_id")
    REFERENCES "Clinic_Mangment"."Patients" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Medical_Insurance"
    ADD FOREIGN KEY ("Patients_Id")
    REFERENCES "Clinic_Mangment"."Patients" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Medical_Insurance"
    ADD FOREIGN KEY ("Company_id")
    REFERENCES "Clinic_Mangment"."Company" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Patients_Medical_History"
    ADD FOREIGN KEY ("Patients_id")
    REFERENCES "Clinic_Mangment"."Patients" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Patients_Medical_History"
    ADD FOREIGN KEY ("Medical_History_id")
    REFERENCES "Clinic_Mangment"."Medical_History" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Doctors"
    ADD FOREIGN KEY ("Specialization_id")
    REFERENCES "Clinic_Mangment"."Specialties" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Certificates"
    ADD FOREIGN KEY ("Doctor_id")
    REFERENCES "Clinic_Mangment"."Doctors" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Doctor_schedule"
    ADD FOREIGN KEY ("Doctor_id")
    REFERENCES "Clinic_Mangment"."Doctors" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Appointments"
    ADD FOREIGN KEY ("Patient_id")
    REFERENCES "Clinic_Mangment"."Patients" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Appointments"
    ADD FOREIGN KEY ("Doctor_id")
    REFERENCES "Clinic_Mangment"."Doctors" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Visit"
    ADD FOREIGN KEY ("Patient_Id")
    REFERENCES "Clinic_Mangment"."Patients" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Visit"
    ADD FOREIGN KEY ("Appointment_id")
    REFERENCES "Clinic_Mangment"."Appointments" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Visit"
    ADD FOREIGN KEY ("Prescription_id")
    REFERENCES "Clinic_Mangment"."Prescription" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Prescription_Item"
    ADD FOREIGN KEY ("Prescription_id")
    REFERENCES "Clinic_Mangment"."Prescription" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Prescription_Item"
    ADD FOREIGN KEY (pharmaceutical_id)
    REFERENCES "Clinic_Mangment"."Pharmaceutical" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Visit_Analysis"
    ADD FOREIGN KEY ("Visit_id")
    REFERENCES "Clinic_Mangment"."Visit" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Visit_Analysis"
    ADD FOREIGN KEY ("Analysis_id")
    REFERENCES "Clinic_Mangment"."Analysis" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Attendance"
    ADD FOREIGN KEY ("Doctor_id")
    REFERENCES "Clinic_Mangment"."Doctors" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Clinic_Mangment"."Attendance"
    ADD FOREIGN KEY ("Doctor_Schedule_id")
    REFERENCES "Clinic_Mangment"."Doctor_schedule" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;